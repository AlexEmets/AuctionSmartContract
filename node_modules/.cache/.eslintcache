[{"/home/oleksandr/Documents/University/guessName/guessGame/src/index.js":"1","/home/oleksandr/Documents/University/guessName/guessGame/src/reportWebVitals.js":"2","/home/oleksandr/Documents/University/guessName/guessGame/src/App.js":"3","/home/oleksandr/Documents/University/guessName/guessGame/src/form/Form.js":"4","/home/oleksandr/Documents/University/guessName/guessGame/src/components/contract/abi.js":"5","/home/oleksandr/Documents/University/guessName/guessGame/src/components/wallet/connectors.js":"6","/home/oleksandr/Documents/University/guessName/guessGame/src/components/contract/address.js":"7"},{"size":535,"mtime":1664120378000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1664120378000,"results":"10","hashOfConfig":"9"},{"size":588,"mtime":1664121116000,"results":"11","hashOfConfig":"9"},{"size":4071,"mtime":1664135201000,"results":"12","hashOfConfig":"9"},{"size":921,"mtime":1664120760000,"results":"13","hashOfConfig":"9"},{"size":157,"mtime":1664120378000,"results":"14","hashOfConfig":"9"},{"size":76,"mtime":1664132552000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gkp2h7",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oleksandr/Documents/University/guessName/guessGame/src/index.js",[],"/home/oleksandr/Documents/University/guessName/guessGame/src/reportWebVitals.js",[],"/home/oleksandr/Documents/University/guessName/guessGame/src/App.js",[],"/home/oleksandr/Documents/University/guessName/guessGame/src/form/Form.js",["31","32","33"],"import { useWeb3React } from \"@web3-react/core\";\nimport { injected } from '../components/wallet/connectors';\nimport {useEffect, useState} from 'react';\nimport Web3 from 'web3';\nimport { abi } from '../components/contract/abi';\nimport { contractAddress } from '../components/contract/address';\n\nconst weiInEth = 1000000000000000000;\n\nexport default function TransferForm() {\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\n    const [diff, setDiff] = useState();\n    const [amount, setAmount] = useState();\n    const [salt, setSalt] = useState();\n    const [status, setStatus] = useState()\n\n    async function connect() {\n        try {\n            await activate(injected);\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    async function disconnect() {\n        try {\n            deactivate();\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    useEffect(() => {\n        const web3 = new Web3(window.ethereum);\n        window.ethereum.enable().then(() => {\n            const contract = new web3.eth.Contract(abi, contractAddress);\n            contract.methods.current_diff().call((err, result) => {\n                if (err) {\n                    console.log(err)\n                } else {\n                    if (result == 0)\n                        setStatus(String('The guess game is not active'));\n                    else\n                        setStatus(String('Current difficulty: ' +  result));\n                }\n            })\n        });\n    }, []);\n\n    const onDiffChange = (e) => {\n        setDiff(e.target.value);\n    }\n\n    const onAmountChange = (e) => {\n        setAmount(Number(e.target.value));\n    }\n\n    const onSaltChange = (e) => {\n        setSalt(Number(e.target.value));\n    }\n\n    const start = async () => {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n\n        const contract = new web3.eth.Contract(abi, contractAddress);\n        contract.methods.newGuessGame(diff).send({\n            from: account,\n            value: amount * weiInEth,\n        }, function(error, transactionHash) {\n            if (error) {\n                alert('Error: ' + error)\n            } else {\n                alert('Tx hash: ' + transactionHash)\n            }\n        });\n    }\n\n    const guess = async () => {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n\n        const contract = new web3.eth.Contract(abi, contractAddress);\n        contract.methods.trySolve(salt).send({\n            from: account,\n        }, function(error, transactionHash) {\n            if (error) {\n                alert('Error: ' + error)\n            } else {\n                alert('Tx hash: ' + transactionHash)\n            }\n        });\n    }\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', width: '50%', justifyContent: 'center', textAlign: 'left', marginTop: '100px', backgroundColor: '#b0e5ff', padding: '50px', borderRadius: '35px' }}>\n            <span style={{ alignSelf: 'center' }}> {status} </span>\n            <span>Your address: {active ? <span style={{ alignSelf: 'flex-end' }}>{account}</span> : ''}</span>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around' }}>\n                <button onClick={connect}>Connect</button>\n                <button onClick={disconnect}>Disconnect</button>\n            </div>\n            <p>Difficulty (between 1 and 4) </p>\n            <input type='text' onChange={onDiffChange} />\n            <p>ETH Amount(min 0.01 ETH)</p>\n            <input type='text' onChange={onAmountChange} />\n            <button style={{ width: '50%', alignSelf: 'center', margin: '10px', height: '45px', borderRadius: '15px' }} onClick={start}>Start game</button>\n            <p>Salt</p>\n            <input type='text' onChange={onSaltChange} />\n            <button style={{ width: '50%', alignSelf: 'center', margin: '10px', height: '45px', borderRadius: '15px' }} onClick={guess}>Guess!</button>\n        </div>\n    )\n}\n","/home/oleksandr/Documents/University/guessName/guessGame/src/components/contract/abi.js",[],"/home/oleksandr/Documents/University/guessName/guessGame/src/components/wallet/connectors.js",[],"/home/oleksandr/Documents/University/guessName/guessGame/src/components/contract/address.js",[],{"ruleId":"34","severity":1,"message":"35","line":11,"column":30,"nodeType":"36","messageId":"37","endLine":11,"endColumn":37},{"ruleId":"34","severity":1,"message":"38","line":11,"column":39,"nodeType":"36","messageId":"37","endLine":11,"endColumn":48},{"ruleId":"39","severity":1,"message":"40","line":41,"column":32,"nodeType":"41","messageId":"42","endLine":41,"endColumn":34},"no-unused-vars","'library' is assigned a value but never used.","Identifier","unusedVar","'connector' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]